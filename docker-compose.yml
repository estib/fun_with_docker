version: '3'

services:

  nginx:
    build: nginx
    container_name: nginx
    networks:
      - doraemon
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.1
    container_name: elasticsearch
    networks:
      - doraemon
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      
  redis:
    image: redis
    container_name: redis_cache
    networks:
      - doraemon
    ports:
      - "6379:6379"
      
  mysql:
    build: mysql
    container_name: mysql_db
    networks:
      - doraemon
    environment:
      MYSQL_ROOT_PASSWORD: iam_root
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/world.sql:/docker-entrypoint-initdb.d/world.sql  #sample data set world
      - ./mysql/dd-agent.sql:/docker-entrypoint-initdb.d/dd-agent.sql 
      
  postgres:
    build: postgres
    container_name: postgres
    networks:
      - doraemon
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/pgdduser.sql:/docker-entrypoint-initdb.d/pgdduser.sql # create dd user
      - ./postgres/dellstore2-normal-1.0.sql:/docker-entrypoint-initdb.d/dellstore2-normal-1.0.sql #sample
        
  datadog:
    build: datadog
    container_name: datadog_agent
    networks:
      - doraemon
    environment:
      - API_KEY=
      - SD_BACKEND=docker
      - NON_LOCAL_TRAFFIC=false
      - ES_HOST=elasticsearch
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      
# API Create Dash containers 
  api-helper:
    build: api-dash-creator
    container_name: api_dash_writer
    environment:
      - API_KEY=
      - APP_KEY=
      
networks:
  doraemon:
     driver: bridge
